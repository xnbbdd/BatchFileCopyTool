<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>